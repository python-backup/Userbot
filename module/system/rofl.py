from module.loader import User
import random
import asyncio
from telethon import types

NAME = "Memes & Trolls"
DESCRIPTION = "–°–∞–º—ã–µ –∫—Ä–∏–Ω–∂–æ–≤—ã–µ –∏ —Å–º–µ—à–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"
EMOJI = "ü§°"
AUTHOR = "system"

class FunModule(User):
    """–ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä–∏–∫–æ–ª–æ–≤ –∏ —Ç—Ä–æ–ª–ª–∏–Ω–≥–∞"""
    def __init__(self, client, db_path="bot_config/bot_data.db"):
        super().__init__(client, db_path)
        self.name = NAME
        self.description = DESCRIPTION
        self.emoji = EMOJI
        self.author = AUTHOR

    async def _execute_command(self, event, response_text):
        """–£–¥–∞–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç"""
        try:
            await event.delete()  # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
        except:
            pass  # –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        await event.respond(response_text)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç

    async def cringe_cmd(self, event):
        '''!cringe - –†–∞–Ω–¥–æ–º–Ω—ã–π –∫—Ä–∏–Ω–∂'''
        cringe_list = [
            "–Ø –≤ 5 –ª–µ—Ç –¥—É–º–∞–ª, —á—Ç–æ –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—å Alt+F4, —Å—Ç–∞–Ω—É –±–æ–≥–∞—Ç—ã–º...",
            "–ö–æ–≥–¥–∞ –º–∞–º–∞ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç, –∫—Ç–æ —Ä–∞–∑–±–∏–ª –≤–∞–∑—É, –∞ —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å, —á—Ç–æ —ç—Ç–æ –∫–æ—Ç... –Ω–æ —É –≤–∞—Å –Ω–µ—Ç –∫–æ—Ç–∞.",
            "–¢—ã: *–ø–∏—à–µ—à—å —Å–æ–æ–±—â–µ–Ω–∏–µ* \n–¢–æ–∂–µ —Ç—ã: *—É–¥–∞–ª—è–µ—à—å* \n–ß–∞—Ç: '...'",
        ]
        await self._execute_command(event, f"ü§° {random.choice(cringe_list)}")

    async def fake_ban_cmd(self, event):
        '''!fakeban - –§–µ–π–∫–æ–≤—ã–π –±–∞–Ω —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —é–∑–µ—Ä–∞'''
        chat = await event.get_chat()
        users = [p.id for p in await self.client.get_participants(chat) if not p.bot]
        if not users:
            await self._execute_command(event, "üö® –ù–µ–∫–æ–≥–æ –±–∞–Ω–∏—Ç—å, —Ç—É—Ç –æ–¥–Ω–∏ –±–æ—Ç—ã...")
            return
        victim = random.choice(users)
        await self._execute_command(event, f"üö® **BANNED** <@{victim}> –∑–∞ **–Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —á–∞—Ç–∞** (—à—É—Ç–∫–∞)")

    async def npc_cmd(self, event):
        '''!npc - –ß—Ç–æ –±—ã —Å–∫–∞–∑–∞–ª NPC?'''
        npc_phrases = [
            "–ú–Ω–µ –Ω—É–∂–Ω–æ –∫–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å...",
            "–ù–µ —Ç—Ä–æ–≥–∞–π –º–µ–Ω—è, —É –º–µ–Ω—è –ª–∞–≥–∞–µ—Ç –ø—É—Ç—å!",
            "–≠–π, —Å–ª—É—à–∞–π!..",
            "–¢—ã –≤–∏–¥–µ–ª –º–æ–µ–≥–æ –∫–æ—Ç–∞?",
        ]
        await self._execute_command(event, f"üó£Ô∏è NPC –≥–æ–≤–æ—Ä–∏—Ç: *{random.choice(npc_phrases)}*")

    async def conspiracy_cmd(self, event):
        '''!conspiracy - –°–ª—É—á–∞–π–Ω–∞—è —Ç–µ–æ—Ä–∏—è –∑–∞–≥–æ–≤–æ—Ä–∞'''
        theories = [
            "–ê —á—Ç–æ –µ—Å–ª–∏ –æ–±–ª–∞–∫–∞ ‚Äì —ç—Ç–æ –¥—Ä–æ–Ω—ã?",
            "Windows 10 –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —à–ø–∏–æ–Ω–∏—Ç –∑–∞ —Ç–≤–æ–∏–º —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–º.",
            "–ö–æ—Ç—ã ‚Äì —ç—Ç–æ –∏–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–Ω–µ, –Ω–æ –æ–Ω–∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—Ç–≤–æ—Ä—è—é—Ç—Å—è –º–∏–ª—ã–º–∏.",
        ]
        await self._execute_command(event, f"üîç **–¢–µ–æ—Ä–∏—è –∑–∞–≥–æ–≤–æ—Ä–∞:** {random.choice(theories)}")

    async def bsod_cmd(self, event):
        '''!bsod - –§–µ–π–∫–æ–≤—ã–π —Å–∏–Ω–∏–π —ç–∫—Ä–∞–Ω'''
        bsod_text = (
            "üíª **CRITICAL ERROR**\n\n"
            "SYSTEM32 DELETED ITSELF\n"
            "PLEASE RESTART YOUR LIFE\n\n"
            "0x0000001A (MEMORY_CORRUPTED_BY_CRINGE)"
        )
        await self._execute_command(event, bsod_text)

    async def anime_char_cmd(self, event):
        '''!animechar - –†–∞–Ω–¥–æ–º–Ω—ã–π –∞–Ω–∏–º–µ-–ø–µ—Ä—Å–æ–Ω–∞–∂'''
        traits = ["—Ü—É–¥–µ—Ä–µ", "—è–Ω–¥–µ—Ä–µ", "–∫—É–¥—ç—Ä–µ", "—Ö–∏–∫–∫–∏–∫–æ–º–æ—Ä–∏"]
        powers = ["–æ–≥–æ–Ω—å", "—Ç—å–º–∞", "–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π", "–±–µ—Å–ø–æ–ª–µ–∑–Ω–æ—Å—Ç—å"]
        response = (
            f"üéå **–¢–≤–æ–π –∞–Ω–∏–º–µ-–ø–µ—Ä—Å–æ–Ω–∞–∂:**\n"
            f"- –¢–∏–ø: **{random.choice(traits)}**\n"
            f"- –°–∏–ª–∞: **{random.choice(powers)}**\n"
            f"- –§—Ä–∞–∑–∞: *'NANI?!'*"
        )
        await self._execute_command(event, response)

    async def troll_cmd(self, event):
        '''!troll - –°–ª—É—á–∞–π–Ω—ã–π —Ç—Ä–æ–ª–ª–∏–Ω–≥'''
        actions = [
            "–Ø –∑–Ω–∞—é, —á—Ç–æ —Ç—ã —ç—Ç–æ —á–∏—Ç–∞–µ—à—å...",
            "*—Ç–∏—Ö–æ —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ*",
            "...",
        ]
        await self._execute_command(event, random.choice(actions))

    async def memename_cmd(self, event):
        '''!memename - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫—Ä–∏–Ω–∂–æ–≤—ã—Ö –Ω–∏–∫–æ–≤'''
        parts = ["xXx_", "_", "Pro", "Noob", "Killer", "2007", "Gamer"]
        new_name = f"{random.choice(parts)}{random.choice(parts)}{random.choice(parts)}"
        await self._execute_command(event, f"üî• –¢–≤–æ–π –Ω–æ–≤—ã–π –Ω–∏–∫: **{new_name}**")

    async def roulette_cmd(self, event):
        '''!roulette - –†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞ (6 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, 1 –ø—Ä–æ–∏–≥—Ä—ã—à–Ω—ã–π)'''
        if random.randint(1, 6) == 1:
            await self._execute_command(event, "üíÄ –ë–∞—Ö! –¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª.")
        else:
            await self._execute_command(event, "üéâ –¢—ã –≤—ã–∂–∏–ª! –ü–æ–ø—Ä–æ–±—É–µ—à—å –µ—â–µ —Ä–∞–∑?")

    async def fake_typing_cmd(self, event):
        '''!typing - –§–µ–π–∫–æ–≤–∞—è –ø–µ—á–∞—Ç—å (–±–æ—Ç –¥–µ–ª–∞–µ—Ç –≤–∏–¥, —á—Ç–æ –ø–µ—á–∞—Ç–∞–µ—Ç)'''
        async with self.client.action(event.chat_id, 'typing'):
            await asyncio.sleep(3)
        await self._execute_command(event, "–Ø –¥–æ–ª–≥–æ –¥—É–º–∞–ª... –Ω–æ —Ç–∞–∫ –∏ –Ω–µ –ø—Ä–∏–¥—É–º–∞–ª –Ω–∏—á–µ–≥–æ —É–º–Ω–æ–≥–æ.")