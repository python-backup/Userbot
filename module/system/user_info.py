from module.loader import User
from telethon import events
import telethon.types
from datetime import datetime

NAME = "–ü—Ä–æ—Ñ–∏–ª—å"
DESCRIPTION = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª—é–¥–µ–π"
EMOJI = "üë§"
VERSION = "1.0"
AUTHOR = "System"

class UserInfoModule(User):
    
    def __init__(self, client, db_path="bot_config/bot_data.db"):
        super().__init__(client, db_path)
        self.name = NAME
        self.description = DESCRIPTION 
        self.emoji = EMOJI
        self.version = VERSION 
        self.author = AUTHOR

    async def user_cmd(self, event):
        try:
            if event.is_reply:
                reply = await event.get_reply_message()
                user = await self.client.get_entity(reply.sender_id)
            elif event.pattern_match.group(1):
                user_arg = event.pattern_match.group(1).strip()
                user = await self.client.get_entity(user_arg)
            else:
                user = await event.get_sender()
            
            user_info = f"‚ÑπÔ∏è **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ**\n\n"
            
            user_info += f"üë§ **–ò–º—è:** {user.first_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
            if user.last_name:
                user_info += f"üë• **–§–∞–º–∏–ª–∏—è:** {user.last_name}\n"
            if user.username:
                user_info += f"üîπ **–Æ–∑–µ—Ä–Ω–µ–π–º:** @{user.username}\n"
            user_info += f"üÜî **ID:** `{user.id}`\n"
            
            if hasattr(user, 'status'):
                if user.status and hasattr(user.status, 'was_online'):
                    last_seen = user.status.was_online
                    user_info += f"‚è± **–ë—ã–ª –≤ —Å–µ—Ç–∏:** {last_seen.strftime('%d.%m.%Y %H:%M')}\n"
            
            if hasattr(user, 'about') and user.about:
                user_info += f"üìù **–û–ø–∏—Å–∞–Ω–∏–µ:** {user.about}\n"
            
            if hasattr(user, 'phone') and user.phone:
                user_info += f"üì± **–¢–µ–ª–µ—Ñ–æ–Ω:** `{user.phone}`\n"
            else:
                user_info += "üì± **–¢–µ–ª–µ—Ñ–æ–Ω:** `–°–∫—Ä—ã—Ç/–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`\n"
            
            if user.bot:
                user_info += "ü§ñ **–≠—Ç–æ –±–æ—Ç:** –î–∞\n"
            
            if hasattr(user, 'status'):
                if user.status and hasattr(user.status, 'created_at'):
                    created_at = user.status.created_at
                    user_info += f"üìÖ **–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:** {created_at.strftime('%d.%m.%Y')}\n"
            
            await event.delete()
            await event.respond(user_info)
            
        except Exception as e:
            await event.delete()
            await event.respond(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")